{"version":3,"sources":["components/Form/StyledFormComponents.jsx","components/Form/Form.jsx","components/Contacts/StyledContactsComponents.jsx","components/Contacts/Contacts.jsx","components/Filter/StyledFilterComponents.jsx","components/Filter/Filter.jsx","components/AppComponents/AppComponents.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","StyledTitle","h1","StyledLable","label","StyledInput","input","StyledButton","button","useInput","useState","value","setValue","useEffect","match","pattern","length","isValidInput","current","style","Form","onNewContactAdd","nameInput","useRef","numberInput","name","setName","number","setNumber","onInputChange","event","target","onSubmit","preventDefault","type","title","placeholder","required","ref","onChange","StyledSubTitle","h2","StyledDiv","div","StyledList","ul","StyledItem","li","StyledName","p","StyledNumber","Contacts","contacts","deleteContact","deleteAll","contactsItems","map","id","onClick","backgroundColor","StyledLabel","Filter","onFilterChange","filter","disabled","StyledApp","section","StyledBanner","App","setContacts","setFilter","contactsFromLocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","searchName","find","toast","warn","existContactMessage","uuidv4","success","addedContactMessage","e","searchStr","toLowerCase","contact","includes","filterContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc3ad43f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n\n  margin-bottom: 1.5rem;\n`;\n\nexport const StyledTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #2db57f;\n  font-size: 2rem;\n  margin-bottom: 1rem;\n\n  text-shadow: 1px 1px 1px -2px rgba(0, 0, 0, 0.56);\n`;\n\nexport const StyledLable = styled.label`\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  color: #2db57f;\n\n  display: flex;\n  align-self: flex-end;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  &:last-of-type {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-left: 0.75rem;\n  display: block;\n\n  min-width: 330px;\n  height: 2rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  padding: 0.5rem 0.5rem 0.25rem;\n\n  border: 0;\n  border-bottom: 1px solid #c15ae0;\n  color: #1f2120;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0 30px #ffffff inset !important;\n  }\n\n  &:focus {\n    outline-color: #c15ae0;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 250px;\n  align-self: center;\n  padding: 0.5rem 1rem;\n  border: 1px solid #c15ae0;\n  border-radius: 0.5rem;\n\n  font-size: 1.5rem;\n\n  text-transform: uppercase;\n\n  color: #c15ae0;\n  background: transparent;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-0.15rem);\n    box-shadow: 2px 2px 5px -2px rgba(0, 0, 0, 0.56);\n  }\n`;\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledForm,\n  StyledTitle,\n  StyledLable,\n  StyledInput,\n  StyledButton as StyledPrimaryButton,\n} from './StyledFormComponents';\n\nconst useInput = (input) => {\n  const [value, setValue] = useState(() => '');\n\n  useEffect(() => {\n    function isValidInput(input) {\n      if (!input.value.match(input.pattern) && input.value.length) return false;\n\n      return true;\n    }\n\n    if (!isValidInput(input.current)) {\n      input.current.style = 'background-color: #f7d7d7;';\n    } else {\n      input.current.style = 'background-color: transparent;';\n    }\n  }, [value, input]);\n\n  return [value, setValue];\n};\n\nfunction Form({ onNewContactAdd }) {\n  const nameInput = useRef();\n  const numberInput = useRef();\n\n  const [name, setName] = useInput(nameInput);\n  const [number, setNumber] = useInput(numberInput);\n\n  //#region class methods\n\n  const onInputChange = (event) => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const clearInputs = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const submitNewContact = (event) => {\n    event.preventDefault();\n\n    const isContactAdded = onNewContactAdd(name, number);\n\n    if (isContactAdded) {\n      clearInputs();\n    }\n  };\n\n  //#endregion\n\n  return (\n    <>\n      <StyledTitle>Phonebook</StyledTitle>\n      <StyledForm onSubmit={submitNewContact}>\n        <StyledLable>\n          Name\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Please, type contact name\"\n            required\n            value={name}\n            ref={nameInput}\n            onChange={onInputChange}\n          />\n        </StyledLable>\n        <StyledLable>\n          Number\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Please, type contact number\"\n            required\n            value={number}\n            ref={numberInput}\n            onChange={onInputChange}\n          />\n        </StyledLable>\n        <StyledPrimaryButton type=\"submit\">Add contact</StyledPrimaryButton>\n      </StyledForm>\n    </>\n  );\n}\n\nForm.propTypes = {\n  onNewContactAdd: PropTypes.func,\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const StyledSubTitle = styled.h2`\n  color: #2db57f;\n  text-transform: uppercase;\n  margin-bottom: 1rem;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 1rem 1.5rem;\n  background-color: #d6d6d6;\n`;\n\nexport const StyledButton = styled.button`\n  align-self: center;\n  padding: 0.25rem 0.75rem;\n  border: 1px solid #c15ae0;\n  border-radius: 0.5rem;\n\n  font-size: 0.75rem;\n\n  text-transform: uppercase;\n\n  color: #c15ae0;\n  background: #ffffff;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-0.1rem);\n    box-shadow: 2px 2px 5px -2px rgba(0, 0, 0, 0.56);\n  }\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  list-style: none;\n\n  margin-bottom: 1rem;\n`;\n\nexport const StyledItem = styled.li`\n  width: 100%;\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  background-color: #ffffff;\n\n  padding: 0.5rem 1rem;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const StyledName = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n\n  display: block;\n  min-width: 40%;\n`;\n\nexport const StyledNumber = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n  display: block;\n  min-width: 35%;\n  color: #2db57f;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  StyledItem,\n  StyledName,\n  StyledNumber,\n  StyledDiv,\n  StyledList,\n  StyledSubTitle,\n  StyledButton,\n} from './StyledContactsComponents';\n\nimport { StyledButton as StyledPrimaryButton } from '../Form/StyledFormComponents';\n\nconst Contacts = ({ contacts, deleteContact, deleteAll }) => {\n  const contactsItems = contacts.map(({ name, number, id }) => {\n    return (\n      <StyledItem key={id}>\n        <StyledName>{name}</StyledName>\n        <StyledNumber>{number}</StyledNumber>\n\n        <StyledButton onClick={deleteContact} value={id}>\n          Remove\n        </StyledButton>\n      </StyledItem>\n    );\n  });\n\n  return (\n    <StyledDiv>\n      <StyledSubTitle>Contacts</StyledSubTitle>\n      <StyledList>{contactsItems}</StyledList>\n      <StyledPrimaryButton onClick={deleteAll} style={{ backgroundColor: '#FAFAFA' }}>\n        Remove all\n      </StyledPrimaryButton>\n    </StyledDiv>\n  );\n};\n\nContacts.propTypes = {\n  deleteContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n\nexport default Contacts;\n","import styled from \"styled-components\";\n\nexport const StyledLabel = styled.label`\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  color: #2db57f;\n\n  display: flex;\n  align-self: flex-end;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  &:last-of-type {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-left: 0.75rem;\n  display: block;\n  min-width: 350px;\n  height: 2rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  padding: 0.5rem 0.5rem 0.25rem;\n\n  border: 0;\n  border-bottom: 1px solid #c15ae0;\n  color: #1f2120;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0 30px #ffffff inset !important;\n  }\n\n  &:focus {\n    outline-color: #c15ae0;\n  }\n\n  &:disabled {\n    border: 1px solid #e1e8e5;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { StyledInput, StyledLabel } from \"./StyledFilterComponents\";\n\nconst Filter = ({ onFilterChange, filter, disabled }) => {\n  return (\n    <div>\n      <StyledLabel>\n        Search\n        <StyledInput\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Please, type search name\"\n          value={filter}\n          onChange={onFilterChange}\n          disabled={disabled}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const StyledApp = styled.section`\n  background-color: #ffffff;\n  border: 1px solid #c15ae0;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 1.5rem;\n\n  width: 100%;\n\n  box-shadow: 7px 7px 15px -8px rgba(0, 0, 0, 0.56);\n`;\n\nexport const StyledBanner = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 1rem 1.5rem;\n  color: #fafafa;\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 1.5rem;\n\n  background-color: #d6d6d6;\n`;\n","import { useState, useEffect } from 'react';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { StyledApp, StyledBanner } from './components/AppComponents/AppComponents';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  //#region class methods\n  useEffect(() => {\n    const contactsFromLocalStorage = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contactsFromLocalStorage) {\n      setContacts([...contactsFromLocalStorage]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const isNameInContacts = (searchName) => {\n    return contacts.find(({ name }) => name === searchName);\n  };\n\n  const isContactAdded = (bool) => bool;\n\n  const addContact = (name, number) => {\n    if (isNameInContacts(name)) {\n      const existContactMessage = (name) => toast.warn(`There is an existing contact with name \"${name}\"!`);\n      existContactMessage(name);\n\n      return isContactAdded(false);\n    }\n\n    const id = uuidv4();\n\n    setContacts([...contacts, { id, name, number }]);\n\n    const addedContactMessage = (name) => toast.success(`New contact \"${name}\" was added!`);\n    addedContactMessage(name);\n\n    return isContactAdded(true);\n  };\n\n  const deleteContact = (event) => {\n    const id = event.target.value;\n\n    setFilter('');\n    setContacts((contacts) => contacts.filter((contact) => contact.id !== id));\n  };\n\n  const filterContacts = () => {\n    if (filter === '') {\n      return contacts;\n    }\n\n    const searchStr = filter.toLowerCase();\n\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(searchStr));\n  };\n\n  //#endregion\n  return (\n    <StyledApp>\n      <Form onNewContactAdd={addContact}></Form>\n      <Filter\n        onFilterChange={(e) => setFilter(e.target.value)}\n        value={filter}\n        disabled={contacts.length ? false : true}\n      />\n      {contacts.length === 0 ? (\n        <StyledBanner>No contacts...</StyledBanner>\n      ) : (\n        <Contacts contacts={filterContacts()} deleteContact={deleteContact} deleteAll={() => setContacts([])} />\n      )}\n      <ToastContainer />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}